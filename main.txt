terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 4.0"
    }
  }
}

# Configure the AWS Provider
provider "aws" {
  region = "ap-southeast-1"
}

# VPC
resource "aws_vpc" "myvpc" {
  cidr_block       = "10.0.0.0/16"
  instance_tenancy = "default"

  tags = {
    Name = "MY-VPC"
  }
}

# Subnets
resource "aws_subnet" "pubsub" {
  vpc_id            = aws_vpc.myvpc.id
  cidr_block        = "10.0.1.0/24"
  availability_zone = "ap-southeast-1a"

  tags = {
    Name = "MY-VPC-PUB-SUB"
  }
}

resource "aws_subnet" "pvtsub" {
  vpc_id            = aws_vpc.myvpc.id
  cidr_block        = "10.0.2.0/24"
  availability_zone = "ap-southeast-1b"

  tags = {
    Name = "MY-VPC-PVT-SUB"
  }
}

# Internet Gateway
resource "aws_internet_gateway" "gw" {
  vpc_id = aws_vpc.myvpc.id

  tags = {
    Name = "MY-VPC-IGW"
  }
}

# Route Table
resource "aws_route_table" "pubroute" {
  vpc_id = aws_vpc.myvpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.gw.id
  }

  tags = {
    Name = "MY-RT-PUB"
  }
}

# Route Table Association
resource "aws_route_table_association" "pubsubroute" {
  subnet_id      = aws_subnet.pubsub.id
  route_table_id = aws_route_table.pubroute.id
}

# Route Table for private subnet
resource "aws_route_table" "pvtroute" {
  vpc_id = aws_vpc.myvpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_nat_gateway.mynat.id
  }

  tags = {
    Name = "MY-RT-PVT"
  }
}

resource "aws_route_table_association" "pvtsubroute" {
  subnet_id      = aws_subnet.pvtsub.id
  route_table_id = aws_route_table.pvtroute.id
}

# Security Group
resource "aws_security_group" "mysgpub" {
  name        = "allow_tcp"
  description = "Allow TLS inbound traffic"
  vpc_id      = aws_vpc.myvpc.id

  ingress {
    description      = "all tcp"
    from_port        = 0
    to_port          = 65535
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0/0"]
  }

  egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }

  tags = {
    Name = "allow_tls"
  }
}

# Elastic IP
resource "aws_eip" "teip" {
  vpc = true
}

# NAT Gateway
resource "aws_nat_gateway" "mynat" {
  allocation_id = aws_eip.teip.id
  subnet_id     = aws_subnet.pubsub.id

  tags = {
    Name = "NAT"
  }
}

# EC2 Instances
resource "aws_instance" "web" {
  ami           = "ami-0df7a207adb9748c7"
  instance_type = "t2.micro"
  associate_public_ip_address = true
  subnet_id     = aws_subnet.pubsub.id
  vpc_security_group_ids      = [aws_security_group.mysgpub.id]
  
  tags = {
    Name = "web"
  }
}

resource "aws_instance" "database" {
  ami           = "ami-0df7a207adb9748c7"
  instance_type = "t2.micro"
  associate_public_ip_address = true
  subnet_id     = aws_subnet.pvtsub.id
  vpc_security_group_ids      = [aws_security_group.mysgpub.id]
  
  tags = {
    Name = "database"
  }
}

